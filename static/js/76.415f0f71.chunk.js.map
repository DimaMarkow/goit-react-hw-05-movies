{"version":3,"file":"static/js/76.415f0f71.chunk.js","mappings":"kOACA,EAA8B,0BAA9B,EAA0E,8BAA1E,EAA0J,0B,SCkD1J,SAASA,EAASC,GAChB,IAAIC,EAAS,IAIb,OAHID,IACFC,EAAM,yCAAqCD,IAEtCC,CACR,CAED,MApDa,WACX,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAcR,OAZAE,EAAAA,EAAAA,YAAU,WACRH,GAAW,IACXI,EAAAA,EAAAA,IAAYH,GACTI,MAAK,SAAAC,GACJR,EAAUQ,EAAKC,KAChB,IACAC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EAAMG,QACnB,IACAC,SAAQ,kBAAMb,GAAW,EAAjB,GACZ,GAAE,CAACC,IAEkB,IAAlBJ,EAAOiB,QAAiBf,GAS1B,gCACGA,IAAW,SAACgB,EAAA,EAAD,KACZ,wBACGlB,EAAOmB,KAAI,SAAAC,GAAK,OACf,2BACE,gBACEC,UAAWC,EACXC,IAAK3B,EAASwB,EAAMI,cACpBC,IAAI,MAEN,cAAGJ,UAAWC,EAAd,SAAgCF,EAAMM,SAN/BN,EAAMO,QADA,UAVnB,cAAGN,UAAWC,EAAd,yDAuBL,C,+LC/CKM,EAAWC,EAAAA,EAAAA,OAAa,CAC5BC,QAAS,kDACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAc,mCAAG,sGACLL,EAASM,IAAI,GAAI,CAAC,GADb,uBACpBzB,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,qDAKrB0B,EAAeN,EAAAA,EAAAA,OAAa,CAChCC,QAAS,qCACTC,OAAQ,CACNC,QAAS,sCAIAI,EAAY,mCAAG,WAAMhC,GAAN,yFACH+B,EAAaD,IAAb,WAAqB9B,GAAM,CAAC,GADzB,uBAClBK,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZ4B,EAAc,mCAAG,WAAMjC,GAAN,yFACL+B,EAAaD,IAAb,WAAqB9B,EAArB,YAAmC,CAAC,GAD/B,uBACpBK,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,sDAKdF,EAAW,mCAAG,WAAMH,GAAN,yFACF+B,EAAaD,IAAb,WAAqB9B,EAArB,YAAmC,CAAC,GADlC,uBACjBK,EADiB,EACjBA,KADiB,kBAElBA,GAFkB,2CAAH,sDAKlB6B,EAAiBT,EAAAA,EAAAA,OAAa,CAClCC,QAAS,4CACTC,OAAQ,CACNC,QAAS,sCAIAO,EAAgB,mCAAG,WAAMC,GAAN,yFACPF,EAAeJ,IAAf,GAAuB,CAC5CH,OAAQ,CAAEU,MAAOD,KAFW,uBACtB/B,EADsB,EACtBA,KADsB,kBAIvBA,GAJuB,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","services/moviesApi.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"detailBasic\":\"Cast_detailBasic__MserU\",\"detailBasicBold\":\"Cast_detailBasicBold__X0A2n\",\"detailBox\":\"Cast_detailBox__-9tt-\",\"detailImage\":\"Cast_detailImage__jSlMa\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Loader from 'components/Loader/Loader';\n\nimport { getCastById } from 'services/moviesApi';\nimport css from 'components/Cast/Cast.module.css';\n\nconst Cast = () => {\n  const [actors, setActors] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const { id } = useParams();\n\n  useEffect(() => {\n    setLoading(true);\n    getCastById(id)\n      .then(data => {\n        setActors(data.cast);\n      })\n      .catch(error => {\n        console.log(error.message);\n      })\n      .finally(() => setLoading(false));\n  }, [id]);\n\n  if (actors.length === 0 && !loading) {\n    return (\n      <p className={css.detailBasicBold}>\n        We don't have any results for this movie ...\n      </p>\n    );\n  }\n\n  return (\n    <>\n      {loading && <Loader />}\n      <ul>\n        {actors.map(actor => (\n          <li key={actor.cast_id}>\n            <img\n              className={css.detailImage}\n              src={isActors(actor.profile_path)}\n              alt=\"\"\n            />\n            <p className={css.detailBasic}>{actor.name}</p>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nfunction isActors(string) {\n  let poster = ' ';\n  if (string) {\n    poster = `https://image.tmdb.org/t/p/w400${string}`;\n  }\n  return poster;\n}\n\nexport default Cast;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/trending/movie/day',\n  params: {\n    api_key: '1798748ad7a054d7f6a9e9dee1e1d177',\n  },\n});\n\nexport const getTrendMovies = async () => {\n  const { data } = await instance.get('', {});\n  return data;\n};\n\nconst instanceByID = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/movie',\n  params: {\n    api_key: '1798748ad7a054d7f6a9e9dee1e1d177',\n  },\n});\n\nexport const getMovieById = async id => {\n  const { data } = await instanceByID.get(`/${id}`, {});\n  return data;\n};\n\nexport const getReviewsById = async id => {\n  const { data } = await instanceByID.get(`/${id}/reviews`, {});\n  return data;\n};\n\nexport const getCastById = async id => {\n  const { data } = await instanceByID.get(`/${id}/credits`, {});\n  return data;\n};\n\nconst instanceSearch = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/search/movie',\n  params: {\n    api_key: '1798748ad7a054d7f6a9e9dee1e1d177',\n  },\n});\n\nexport const getSearchedMovie = async filter => {\n  const { data } = await instanceSearch.get(``, {\n    params: { query: filter },\n  });\n  return data;\n};\n\n// https://api.themoviedb.org/3/search/movie\n\n// export const searchImages = async (search, page) => {\n//   const { data } = await instance.get('/', {\n//     params: { query: search, page: page },\n//   });\n//   return data;\n// };\n\n// fetch(\n//   `https://pixabay.com/api/?key=31955836-4f23a30b6c1dc45c2c659779e&q=${this.props.filter}&image_type=photo&per_page=12&page=1`\n// )\n//   .then(res => {\n//     if (res.ok) {\n//       return res.json();\n//     }\n//     return Promise.reject(\n//       new Error(`Нет фото соответствующих ${this.props.filter}`)\n//     );\n//   })\n//   .then(data => {\n//     this.setState({ images: data.hits });\n//   })\n//   .catch(error => {\n//     this.setState({ error });\n//   })\n//   .finally(() => this.setState({ loading: false }));\n"],"names":["isActors","string","poster","useState","actors","setActors","loading","setLoading","id","useParams","useEffect","getCastById","then","data","cast","catch","error","console","log","message","finally","length","Loader","map","actor","className","css","src","profile_path","alt","name","cast_id","instance","axios","baseURL","params","api_key","getTrendMovies","get","instanceByID","getMovieById","getReviewsById","instanceSearch","getSearchedMovie","filter","query"],"sourceRoot":""}