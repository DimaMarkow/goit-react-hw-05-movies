{"version":3,"file":"static/js/168.f124fff3.chunk.js","mappings":"oOACA,EAA+J,6BAA/J,EAA8M,iC,SC6C9M,EAvCgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAcR,OAZAE,EAAAA,EAAAA,YAAU,WACRH,GAAW,IACXI,EAAAA,EAAAA,IAAeH,GACZI,MAAK,SAAAC,GACJR,EAAWQ,EAAKC,QACjB,IACAC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EAAMG,QACnB,IACAC,SAAQ,kBAAMb,GAAW,EAAjB,GACZ,GAAE,CAACC,IAEmB,IAAnBJ,EAAQiB,QAAiBf,GAQ3B,gCACGA,IAAW,SAACgB,EAAA,EAAD,KACZ,wBACGlB,EAAQmB,KAAI,SAAAC,GAAM,OACjB,2BACE,cAAGC,UAAWC,EAAd,SAAoCF,EAAOG,UAC3C,cAAGF,UAAWC,EAAd,SAAgCF,EAAOI,YAFhCJ,EAAOhB,GADC,UATrB,cAAGiB,UAAWC,EAAd,yDAkBL,C,+LC1CKG,EAAWC,EAAAA,EAAAA,OAAa,CAC5BC,QAAS,kDACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAc,mCAAG,sGACLL,EAASM,IAAI,GAAI,CAAC,GADb,uBACpBtB,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,qDAKrBuB,EAAeN,EAAAA,EAAAA,OAAa,CAChCC,QAAS,qCACTC,OAAQ,CACNC,QAAS,sCAIAI,EAAY,mCAAG,WAAM7B,GAAN,yFACH4B,EAAaD,IAAb,WAAqB3B,GAAM,CAAC,GADzB,uBAClBK,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZF,EAAc,mCAAG,WAAMH,GAAN,yFACL4B,EAAaD,IAAb,WAAqB3B,EAArB,YAAmC,CAAC,GAD/B,uBACpBK,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,sDAKdyB,EAAW,mCAAG,WAAM9B,GAAN,yFACF4B,EAAaD,IAAb,WAAqB3B,EAArB,YAAmC,CAAC,GADlC,uBACjBK,EADiB,EACjBA,KADiB,kBAElBA,GAFkB,2CAAH,sDAKlB0B,EAAiBT,EAAAA,EAAAA,OAAa,CAClCC,QAAS,4CACTC,OAAQ,CACNC,QAAS,sCAIAO,EAAgB,mCAAG,WAAMC,GAAN,yFACPF,EAAeJ,IAAf,GAAuB,CAC5CH,OAAQ,CAAEU,MAAOD,KAFW,uBACtB5B,EADsB,EACtBA,KADsB,kBAIvBA,GAJuB,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx","services/moviesApi.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"detailName\":\"Reviews_detailName__vI1gs\",\"genresContainer\":\"Reviews_genresContainer__3UPh3\",\"overview\":\"Reviews_overview__GvKQy\",\"detailBasic\":\"Reviews_detailBasic__O+ZBK\",\"detailBasicBold\":\"Reviews_detailBasicBold__pJN1-\",\"detailBox\":\"Reviews_detailBox__O2pm1\",\"detailImage\":\"Reviews_detailImage__TU94B\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Loader from 'components/Loader/Loader';\n\nimport { getReviewsById } from 'services/moviesApi';\nimport css from 'components/Reviews/Reviews.module.css';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const { id } = useParams();\n\n  useEffect(() => {\n    setLoading(true);\n    getReviewsById(id)\n      .then(data => {\n        setReviews(data.results);\n      })\n      .catch(error => {\n        console.log(error.message);\n      })\n      .finally(() => setLoading(false));\n  }, [id]);\n\n  if (reviews.length === 0 && !loading) {\n    return (\n      <p className={css.detailBasicBold}>\n        We don't have any reviews for this movie ...\n      </p>\n    );\n  }\n  return (\n    <>\n      {loading && <Loader />}\n      <ul>\n        {reviews.map(review => (\n          <li key={review.id}>\n            <p className={css.detailBasicBold}>{review.author}</p>\n            <p className={css.detailBasic}>{review.content}</p>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/trending/movie/day',\n  params: {\n    api_key: '1798748ad7a054d7f6a9e9dee1e1d177',\n  },\n});\n\nexport const getTrendMovies = async () => {\n  const { data } = await instance.get('', {});\n  return data;\n};\n\nconst instanceByID = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/movie',\n  params: {\n    api_key: '1798748ad7a054d7f6a9e9dee1e1d177',\n  },\n});\n\nexport const getMovieById = async id => {\n  const { data } = await instanceByID.get(`/${id}`, {});\n  return data;\n};\n\nexport const getReviewsById = async id => {\n  const { data } = await instanceByID.get(`/${id}/reviews`, {});\n  return data;\n};\n\nexport const getCastById = async id => {\n  const { data } = await instanceByID.get(`/${id}/credits`, {});\n  return data;\n};\n\nconst instanceSearch = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/search/movie',\n  params: {\n    api_key: '1798748ad7a054d7f6a9e9dee1e1d177',\n  },\n});\n\nexport const getSearchedMovie = async filter => {\n  const { data } = await instanceSearch.get(``, {\n    params: { query: filter },\n  });\n  return data;\n};\n"],"names":["useState","reviews","setReviews","loading","setLoading","id","useParams","useEffect","getReviewsById","then","data","results","catch","error","console","log","message","finally","length","Loader","map","review","className","css","author","content","instance","axios","baseURL","params","api_key","getTrendMovies","get","instanceByID","getMovieById","getCastById","instanceSearch","getSearchedMovie","filter","query"],"sourceRoot":""}