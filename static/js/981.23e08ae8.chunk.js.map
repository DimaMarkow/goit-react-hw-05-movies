{"version":3,"file":"static/js/981.23e08ae8.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","webpack://react-homework-template/./src/components/SearchBox/SearchBox.module.css?45fa","components/SearchBox/SearchBox.jsx","pages/Movies/Movies.jsx","services/moviesApi.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MoviesList_container__0JGj2\"};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport css from 'components/MoviesList/MoviesList.module.css';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <div className={css.container}>\n      <ul>\n        {movies.map(movie => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"searchbar\":\"SearchBox_searchbar__zpp5K\",\"searchForm\":\"SearchBox_searchForm__SdqTH\",\"searchFormButton\":\"SearchBox_searchFormButton__uXmPL\",\"searchFormButtonLabel\":\"SearchBox_searchFormButtonLabel__yccyS\",\"searchFormIinput\":\"SearchBox_searchFormIinput__27g-v\",\"searchFormInput\":\"SearchBox_searchFormInput__NFvoh\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport css from 'components/SearchBox/SearchBox.module.css';\n\nconst SearchBox = ({ onSubmit, initMovie }) => {\n  const [movieName, setMovieName] = useState(initMovie || '');\n\n  const handleChange = e => {\n    const { value } = e.currentTarget;\n    setMovieName(value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (movieName.trim() === '') {\n      toast.error('Please, fill the field for filter!', {\n        position: 'top-right',\n        autoClose: 2000,\n        theme: 'light',\n      });\n      return;\n    }\n    onSubmit(movieName);\n  };\n\n  return (\n    <header className={css.searchbar}>\n      <form className={css.searchForm} onSubmit={handleSubmit}>\n        <input\n          className={css.searchFormIinput}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          value={movieName}\n          onChange={handleChange}\n        />\n        <button type=\"submit\" className={css.searchFormButton}>\n          <span className={css.searchFormButtonLabel}>Search</span>\n        </button>\n      </form>\n    </header>\n  );\n};\n\nexport default SearchBox;\n\nSearchBox.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  initMovie: PropTypes.string,\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport Loader from 'components/Loader/Loader';\n\nimport SearchBox from 'components/SearchBox/SearchBox';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { getSearchedMovie } from 'services/moviesApi';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const onSubmit = movieName => {\n    const normalizedFilter = movieName.toLowerCase();\n    setSearchParams({ query: normalizedFilter });\n  };\n\n  const search = searchParams.get('query');\n\n  useEffect(() => {\n    setLoading(true);\n    if (search === '') {\n      return;\n    }\n    getSearchedMovie(search)\n      .then(data => {\n        setMovies(prevMovies => [...data.results]);\n      })\n      .catch(error => {\n        console.log(error.message);\n      })\n      .finally(() => setLoading(false));\n  }, [search]);\n\n  return (\n    <main>\n      <SearchBox onSubmit={onSubmit} initMovie={search} />\n      {loading && <Loader />}\n      {movies.length > 0 && <MoviesList movies={movies} />}\n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/trending/movie/day',\n  params: {\n    api_key: '1798748ad7a054d7f6a9e9dee1e1d177',\n  },\n});\n\nexport const getTrendMovies = async () => {\n  const { data } = await instance.get('', {});\n  return data;\n};\n\nconst instanceByID = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/movie',\n  params: {\n    api_key: '1798748ad7a054d7f6a9e9dee1e1d177',\n  },\n});\n\nexport const getMovieById = async id => {\n  const { data } = await instanceByID.get(`/${id}`, {});\n  return data;\n};\n\nexport const getReviewsById = async id => {\n  const { data } = await instanceByID.get(`/${id}/reviews`, {});\n  return data;\n};\n\nexport const getCastById = async id => {\n  const { data } = await instanceByID.get(`/${id}/credits`, {});\n  return data;\n};\n\nconst instanceSearch = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/search/movie',\n  params: {\n    api_key: '1798748ad7a054d7f6a9e9dee1e1d177',\n  },\n});\n\nexport const getSearchedMovie = async filter => {\n  const { data } = await instanceSearch.get(``, {\n    params: { query: filter },\n  });\n  return data;\n};\n"],"names":["MoviesList","movies","location","useLocation","className","css","map","movie","to","id","state","from","title","onSubmit","initMovie","useState","movieName","setMovieName","e","preventDefault","trim","toast","position","autoClose","theme","type","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","setMovies","loading","setLoading","useSearchParams","searchParams","setSearchParams","search","get","useEffect","getSearchedMovie","then","data","prevMovies","results","catch","error","console","log","message","finally","normalizedFilter","toLowerCase","query","Loader","length","instance","axios","baseURL","params","api_key","getTrendMovies","instanceByID","getMovieById","getReviewsById","getCastById","instanceSearch","filter"],"sourceRoot":""}